// <auto-generated />
using System;
using AcciPro.App.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AcciPro.App.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20211010143215_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("AcciPro.App.Dominio.Accidente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AgenteId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fecha")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Latitud")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitud")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AgenteId");

                    b.ToTable("Accidentes");
                });

            modelBuilder.Entity("AcciPro.App.Dominio.EventoAccidente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Id_accidente")
                        .HasColumnType("int");

                    b.Property<int>("id_agente")
                        .HasColumnType("int");

                    b.Property<int>("id_persona")
                        .HasColumnType("int");

                    b.Property<int>("id_vehiculo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EventoAccidentes");
                });

            modelBuilder.Entity("AcciPro.App.Dominio.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AccidenteId")
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Cedula")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("edad")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AccidenteId");

                    b.ToTable("Personas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Persona");
                });

            modelBuilder.Entity("AcciPro.App.Dominio.TipoVehiculo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("TipoVehiculos");

                    b.HasDiscriminator<string>("Discriminator").HasValue("TipoVehiculo");
                });

            modelBuilder.Entity("AcciPro.App.Dominio.Agente", b =>
                {
                    b.HasBaseType("AcciPro.App.Dominio.Persona");

                    b.Property<string>("Ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<float>("Latitud")
                        .HasColumnType("real");

                    b.Property<float>("Longitud")
                        .HasColumnType("real");

                    b.HasDiscriminator().HasValue("Agente");
                });

            modelBuilder.Entity("AcciPro.App.Dominio.Vehiculo", b =>
                {
                    b.HasBaseType("AcciPro.App.Dominio.TipoVehiculo");

                    b.Property<int?>("AccidenteId")
                        .HasColumnType("int");

                    b.Property<string>("Ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Matricula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo_Propietario")
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("AccidenteId");

                    b.HasDiscriminator().HasValue("Vehiculo");
                });

            modelBuilder.Entity("AcciPro.App.Dominio.Accidente", b =>
                {
                    b.HasOne("AcciPro.App.Dominio.Agente", null)
                        .WithMany("Accidentes")
                        .HasForeignKey("AgenteId");
                });

            modelBuilder.Entity("AcciPro.App.Dominio.Persona", b =>
                {
                    b.HasOne("AcciPro.App.Dominio.Accidente", null)
                        .WithMany("Persona")
                        .HasForeignKey("AccidenteId");
                });

            modelBuilder.Entity("AcciPro.App.Dominio.Vehiculo", b =>
                {
                    b.HasOne("AcciPro.App.Dominio.Accidente", null)
                        .WithMany("Vehiculo")
                        .HasForeignKey("AccidenteId");
                });

            modelBuilder.Entity("AcciPro.App.Dominio.Accidente", b =>
                {
                    b.Navigation("Persona");

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("AcciPro.App.Dominio.Agente", b =>
                {
                    b.Navigation("Accidentes");
                });
#pragma warning restore 612, 618
        }
    }
}
